import pylab
import numpy
from sp import ssim
from PIL import Image
einstein = numpy.asarray(Image.open('./imgs/einstein.tif'))
meanshift = numpy.asarray(Image.open('./imgs/meanshift.tif'))
contrast = numpy.asarray(Image.open('./imgs/contrast.tif'))
impulse = numpy.asarray(Image.open('./imgs/impulse.tif'))
blur = numpy.asarray(Image.open('./imgs/blur.tif'))
jpg = numpy.asarray(Image.open('./imgs/jpg.tif'))
einstein_ssim = ssim.ssim(einstein, einstein)
meanshift_ssim = ssim.ssim(einstein, meanshift)
contrast_ssim = ssim.ssim(einstein, contrast)
impulse_ssim = ssim.ssim(einstein, impulse)
blur_ssim = ssim.ssim(einstein, blur)
jpg_ssim = ssim.ssim(einstein, jpg)
pylab.figure()
pylab.subplot(2, 3, 1)
pylab.title('Original\n SSIM %.3f' % einstein_ssim.mean())
pylab.imshow(einstein, cmap=pylab.gray())
pylab.subplot(2, 3, 2)
pylab.title('Mean-Shifted\n SSIM %.3f' % meanshift_ssim.mean())
pylab.imshow(meanshift, cmap=pylab.gray())
pylab.subplot(2, 3, 3)
pylab.title('Contrast-Adjusted\n SSIM %.3f' % contrast_ssim.mean())
pylab.imshow(contrast, cmap=pylab.gray())
pylab.subplot(2, 3, 4)
pylab.title('Impulse-Noise\n SSIM %.3f' % impulse_ssim.mean())
pylab.imshow(impulse, cmap=pylab.gray())
pylab.subplot(2, 3, 5)
pylab.title('Blur\n SSIM %.3f' % blur_ssim.mean())
pylab.imshow(blur, cmap=pylab.gray())
pylab.subplot(2, 3, 6)
pylab.title('JPG\n SSIM %.3f' % jpg_ssim.mean())
pylab.imshow(jpg, cmap=pylab.gray())
pylab.show()